// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.19.6
// source: proto/can.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Coordinate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinX    float32 `protobuf:"fixed32,1,opt,name=min_x,json=minX,proto3" json:"min_x,omitempty"`
	MinY    float32 `protobuf:"fixed32,2,opt,name=min_y,json=minY,proto3" json:"min_y,omitempty"`
	MaxX    float32 `protobuf:"fixed32,3,opt,name=max_x,json=maxX,proto3" json:"max_x,omitempty"`
	MaxY    float32 `protobuf:"fixed32,4,opt,name=max_y,json=maxY,proto3" json:"max_y,omitempty"`
	CenterX float32 `protobuf:"fixed32,5,opt,name=center_x,json=centerX,proto3" json:"center_x,omitempty"`
	CenterY float32 `protobuf:"fixed32,6,opt,name=center_y,json=centerY,proto3" json:"center_y,omitempty"`
}

func (x *Coordinate) Reset() {
	*x = Coordinate{}
	mi := &file_proto_can_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coordinate) ProtoMessage() {}

func (x *Coordinate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_can_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coordinate.ProtoReflect.Descriptor instead.
func (*Coordinate) Descriptor() ([]byte, []int) {
	return file_proto_can_proto_rawDescGZIP(), []int{0}
}

func (x *Coordinate) GetMinX() float32 {
	if x != nil {
		return x.MinX
	}
	return 0
}

func (x *Coordinate) GetMinY() float32 {
	if x != nil {
		return x.MinY
	}
	return 0
}

func (x *Coordinate) GetMaxX() float32 {
	if x != nil {
		return x.MaxX
	}
	return 0
}

func (x *Coordinate) GetMaxY() float32 {
	if x != nil {
		return x.MaxY
	}
	return 0
}

func (x *Coordinate) GetCenterX() float32 {
	if x != nil {
		return x.CenterX
	}
	return 0
}

func (x *Coordinate) GetCenterY() float32 {
	if x != nil {
		return x.CenterY
	}
	return 0
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	mi := &file_proto_can_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_proto_can_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_proto_can_proto_rawDescGZIP(), []int{1}
}

func (x *Point) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Point) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type NewNodeInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Point   *Point     `protobuf:"bytes,1,opt,name=point,proto3" json:"point,omitempty"`
	Address *IPAddress `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *NewNodeInformation) Reset() {
	*x = NewNodeInformation{}
	mi := &file_proto_can_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewNodeInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewNodeInformation) ProtoMessage() {}

func (x *NewNodeInformation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_can_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewNodeInformation.ProtoReflect.Descriptor instead.
func (*NewNodeInformation) Descriptor() ([]byte, []int) {
	return file_proto_can_proto_rawDescGZIP(), []int{2}
}

func (x *NewNodeInformation) GetPoint() *Point {
	if x != nil {
		return x.Point
	}
	return nil
}

func (x *NewNodeInformation) GetAddress() *IPAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

type NodeInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coordinate *Coordinate `protobuf:"bytes,1,opt,name=coordinate,proto3" json:"coordinate,omitempty"`
	OriginNode *IPAddress  `protobuf:"bytes,2,opt,name=originNode,proto3" json:"originNode,omitempty"`
}

func (x *NodeInformation) Reset() {
	*x = NodeInformation{}
	mi := &file_proto_can_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInformation) ProtoMessage() {}

func (x *NodeInformation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_can_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInformation.ProtoReflect.Descriptor instead.
func (*NodeInformation) Descriptor() ([]byte, []int) {
	return file_proto_can_proto_rawDescGZIP(), []int{3}
}

func (x *NodeInformation) GetCoordinate() *Coordinate {
	if x != nil {
		return x.Coordinate
	}
	return nil
}

func (x *NodeInformation) GetOriginNode() *IPAddress {
	if x != nil {
		return x.OriginNode
	}
	return nil
}

type InformationToAddNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldNode           *NodeInformation   `protobuf:"bytes,1,opt,name=oldNode,proto3" json:"oldNode,omitempty"`
	NewCoordinate     *Coordinate        `protobuf:"bytes,2,opt,name=newCoordinate,proto3" json:"newCoordinate,omitempty"`
	Resources         []*Resource        `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty"` //Le risorse di cui il nuovo nodo  si occupa
	NeighboursOldNode []*NodeInformation `protobuf:"bytes,4,rep,name=neighboursOldNode,proto3" json:"neighboursOldNode,omitempty"`
}

func (x *InformationToAddNode) Reset() {
	*x = InformationToAddNode{}
	mi := &file_proto_can_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InformationToAddNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InformationToAddNode) ProtoMessage() {}

func (x *InformationToAddNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_can_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InformationToAddNode.ProtoReflect.Descriptor instead.
func (*InformationToAddNode) Descriptor() ([]byte, []int) {
	return file_proto_can_proto_rawDescGZIP(), []int{4}
}

func (x *InformationToAddNode) GetOldNode() *NodeInformation {
	if x != nil {
		return x.OldNode
	}
	return nil
}

func (x *InformationToAddNode) GetNewCoordinate() *Coordinate {
	if x != nil {
		return x.NewCoordinate
	}
	return nil
}

func (x *InformationToAddNode) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *InformationToAddNode) GetNeighboursOldNode() []*NodeInformation {
	if x != nil {
		return x.NeighboursOldNode
	}
	return nil
}

type Resources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NeighboursOldNode []*NodeInformation `protobuf:"bytes,3,rep,name=neighboursOldNode,proto3" json:"neighboursOldNode,omitempty"`
	CoordinateOldNode *Coordinate        `protobuf:"bytes,1,opt,name=coordinateOldNode,proto3" json:"coordinateOldNode,omitempty"`
	Resources         []*Resource        `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *Resources) Reset() {
	*x = Resources{}
	mi := &file_proto_can_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_proto_can_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_proto_can_proto_rawDescGZIP(), []int{5}
}

func (x *Resources) GetNeighboursOldNode() []*NodeInformation {
	if x != nil {
		return x.NeighboursOldNode
	}
	return nil
}

func (x *Resources) GetCoordinateOldNode() *Coordinate {
	if x != nil {
		return x.CoordinateOldNode
	}
	return nil
}

func (x *Resources) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type ResourcesBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*Resource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	Address   string      `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ResourcesBackup) Reset() {
	*x = ResourcesBackup{}
	mi := &file_proto_can_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourcesBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcesBackup) ProtoMessage() {}

func (x *ResourcesBackup) ProtoReflect() protoreflect.Message {
	mi := &file_proto_can_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcesBackup.ProtoReflect.Descriptor instead.
func (*ResourcesBackup) Descriptor() ([]byte, []int) {
	return file_proto_can_proto_rawDescGZIP(), []int{6}
}

func (x *ResourcesBackup) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ResourcesBackup) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type HeartBeatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes       []*NodeInformation `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"` //tutti i nodi di cui è a conoscienza (compreso se stesso) con coordinate
	FromWho     string             `protobuf:"bytes,2,opt,name=fromWho,proto3" json:"fromWho,omitempty"`
	BackupNodes []string           `protobuf:"bytes,3,rep,name=backupNodes,proto3" json:"backupNodes,omitempty"`
}

func (x *HeartBeatMessage) Reset() {
	*x = HeartBeatMessage{}
	mi := &file_proto_can_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartBeatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatMessage) ProtoMessage() {}

func (x *HeartBeatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_can_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatMessage.ProtoReflect.Descriptor instead.
func (*HeartBeatMessage) Descriptor() ([]byte, []int) {
	return file_proto_can_proto_rawDescGZIP(), []int{7}
}

func (x *HeartBeatMessage) GetNodes() []*NodeInformation {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *HeartBeatMessage) GetFromWho() string {
	if x != nil {
		return x.FromWho
	}
	return ""
}

func (x *HeartBeatMessage) GetBackupNodes() []string {
	if x != nil {
		return x.BackupNodes
	}
	return nil
}

type IPAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *IPAddress) Reset() {
	*x = IPAddress{}
	mi := &file_proto_can_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAddress) ProtoMessage() {}

func (x *IPAddress) ProtoReflect() protoreflect.Message {
	mi := &file_proto_can_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAddress.ProtoReflect.Descriptor instead.
func (*IPAddress) Descriptor() ([]byte, []int) {
	return file_proto_can_proto_rawDescGZIP(), []int{8}
}

func (x *IPAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_proto_can_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_can_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_proto_can_proto_rawDescGZIP(), []int{9}
}

func (x *Resource) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Resource) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Bool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B bool `protobuf:"varint,1,opt,name=b,proto3" json:"b,omitempty"`
}

func (x *Bool) Reset() {
	*x = Bool{}
	mi := &file_proto_can_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bool) ProtoMessage() {}

func (x *Bool) ProtoReflect() protoreflect.Message {
	mi := &file_proto_can_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bool.ProtoReflect.Descriptor instead.
func (*Bool) Descriptor() ([]byte, []int) {
	return file_proto_can_proto_rawDescGZIP(), []int{10}
}

func (x *Bool) GetB() bool {
	if x != nil {
		return x.B
	}
	return false
}

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	K string `protobuf:"bytes,1,opt,name=k,proto3" json:"k,omitempty"`
}

func (x *Key) Reset() {
	*x = Key{}
	mi := &file_proto_can_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_proto_can_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_proto_can_proto_rawDescGZIP(), []int{11}
}

func (x *Key) GetK() string {
	if x != nil {
		return x.K
	}
	return ""
}

type AddressList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ad []string `protobuf:"bytes,1,rep,name=ad,proto3" json:"ad,omitempty"`
}

func (x *AddressList) Reset() {
	*x = AddressList{}
	mi := &file_proto_can_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressList) ProtoMessage() {}

func (x *AddressList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_can_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressList.ProtoReflect.Descriptor instead.
func (*AddressList) Descriptor() ([]byte, []int) {
	return file_proto_can_proto_rawDescGZIP(), []int{12}
}

func (x *AddressList) GetAd() []string {
	if x != nil {
		return x.Ad
	}
	return nil
}

type AddBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address  string    `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Resource *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *AddBackup) Reset() {
	*x = AddBackup{}
	mi := &file_proto_can_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBackup) ProtoMessage() {}

func (x *AddBackup) ProtoReflect() protoreflect.Message {
	mi := &file_proto_can_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBackup.ProtoReflect.Descriptor instead.
func (*AddBackup) Descriptor() ([]byte, []int) {
	return file_proto_can_proto_rawDescGZIP(), []int{13}
}

func (x *AddBackup) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddBackup) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type DeleteBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DeleteBackup) Reset() {
	*x = DeleteBackup{}
	mi := &file_proto_can_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBackup) ProtoMessage() {}

func (x *DeleteBackup) ProtoReflect() protoreflect.Message {
	mi := &file_proto_can_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBackup.ProtoReflect.Descriptor instead.
func (*DeleteBackup) Descriptor() ([]byte, []int) {
	return file_proto_can_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteBackup) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DeleteBackup) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type TakeoverMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailureNode string           `protobuf:"bytes,1,opt,name=failureNode,proto3" json:"failureNode,omitempty"`
	ByWho       *NodeInformation `protobuf:"bytes,2,opt,name=byWho,proto3" json:"byWho,omitempty"`
}

func (x *TakeoverMessage) Reset() {
	*x = TakeoverMessage{}
	mi := &file_proto_can_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TakeoverMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeoverMessage) ProtoMessage() {}

func (x *TakeoverMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_can_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeoverMessage.ProtoReflect.Descriptor instead.
func (*TakeoverMessage) Descriptor() ([]byte, []int) {
	return file_proto_can_proto_rawDescGZIP(), []int{15}
}

func (x *TakeoverMessage) GetFailureNode() string {
	if x != nil {
		return x.FailureNode
	}
	return ""
}

func (x *TakeoverMessage) GetByWho() *NodeInformation {
	if x != nil {
		return x.ByWho
	}
	return nil
}

var File_proto_can_proto protoreflect.FileDescriptor

var file_proto_can_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x5f, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x58, 0x12, 0x13, 0x0a, 0x05,
	0x6d, 0x69, 0x6e, 0x5f, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6d, 0x69, 0x6e,
	0x59, 0x12, 0x13, 0x0a, 0x05, 0x6d, 0x61, 0x78, 0x5f, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x04, 0x6d, 0x61, 0x78, 0x58, 0x12, 0x13, 0x0a, 0x05, 0x6d, 0x61, 0x78, 0x5f, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6d, 0x61, 0x78, 0x59, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x58, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x5f, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x59, 0x22, 0x23, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x22, 0x64, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x05,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x2a, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x76, 0x0a, 0x0f,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x31, 0x0a, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x4e, 0x6f, 0x64, 0x65, 0x22, 0xf6, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a,
	0x07, 0x6f, 0x6c, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x6c, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x37, 0x0a, 0x0d, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x11, 0x6e, 0x65, 0x69, 0x67, 0x68,
	0x62, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x6c, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6e, 0x65, 0x69, 0x67,
	0x68, 0x62, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x6c, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0xc1, 0x01,
	0x0a, 0x09, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x11, 0x6e,
	0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x6c, 0x64, 0x4e, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11,
	0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x75, 0x72, 0x73, 0x4f, 0x6c, 0x64, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x3f, 0x0a, 0x11, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x4f,
	0x6c, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52,
	0x11, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x4f, 0x6c, 0x64, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x22, 0x5a, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x12, 0x2d, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x7c, 0x0a,
	0x10, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x2c, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x57, 0x68, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x57, 0x68, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x09, 0x49,
	0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x32, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x14, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x0c,
	0x0a, 0x01, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x01, 0x62, 0x22, 0x13, 0x0a, 0x03,
	0x4b, 0x65, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01,
	0x6b, 0x22, 0x1d, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x61, 0x64,
	0x22, 0x52, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x22, 0x3a, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x22, 0x61, 0x0a, 0x0f, 0x54, 0x61, 0x6b, 0x65, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x62, 0x79, 0x57, 0x68, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x62, 0x79,
	0x57, 0x68, 0x6f, 0x32, 0xa6, 0x01, 0x0a, 0x10, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61,
	0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x50, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x50,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x50,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x36, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0xc3, 0x07, 0x0a,
	0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4e, 0x65, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x3d, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30,
	0x0a, 0x0b, 0x61, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x2a, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x1a, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x0e,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x09,
	0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x41,
	0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x12, 0x31, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x43, 0x0a, 0x09, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5a,
	0x6f, 0x6e, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x1a, 0x0b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x36, 0x0a, 0x15, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x73, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f,
	0x75, 0x72, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x12, 0x38, 0x0a, 0x17, 0x61, 0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x6f, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x1a, 0x0b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x3e, 0x0a, 0x1a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x6f, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x1a, 0x0b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x30, 0x0a, 0x0f, 0x68,
	0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x3c, 0x0a,
	0x15, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x1a, 0x0b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x39, 0x0a, 0x12, 0x61,
	0x64, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x39, 0x0a, 0x18, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x12, 0x2f, 0x0a, 0x08, 0x74, 0x61, 0x6b, 0x65, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x6b, 0x65, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x42, 0x11, 0x5a, 0x0f, 0x44, 0x48, 0x54, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_can_proto_rawDescOnce sync.Once
	file_proto_can_proto_rawDescData = file_proto_can_proto_rawDesc
)

func file_proto_can_proto_rawDescGZIP() []byte {
	file_proto_can_proto_rawDescOnce.Do(func() {
		file_proto_can_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_can_proto_rawDescData)
	})
	return file_proto_can_proto_rawDescData
}

var file_proto_can_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_can_proto_goTypes = []any{
	(*Coordinate)(nil),           // 0: proto.Coordinate
	(*Point)(nil),                // 1: proto.Point
	(*NewNodeInformation)(nil),   // 2: proto.NewNodeInformation
	(*NodeInformation)(nil),      // 3: proto.NodeInformation
	(*InformationToAddNode)(nil), // 4: proto.InformationToAddNode
	(*Resources)(nil),            // 5: proto.Resources
	(*ResourcesBackup)(nil),      // 6: proto.ResourcesBackup
	(*HeartBeatMessage)(nil),     // 7: proto.HeartBeatMessage
	(*IPAddress)(nil),            // 8: proto.IPAddress
	(*Resource)(nil),             // 9: proto.Resource
	(*Bool)(nil),                 // 10: proto.Bool
	(*Key)(nil),                  // 11: proto.Key
	(*AddressList)(nil),          // 12: proto.AddressList
	(*AddBackup)(nil),            // 13: proto.AddBackup
	(*DeleteBackup)(nil),         // 14: proto.DeleteBackup
	(*TakeoverMessage)(nil),      // 15: proto.TakeoverMessage
}
var file_proto_can_proto_depIdxs = []int32{
	1,  // 0: proto.NewNodeInformation.point:type_name -> proto.Point
	8,  // 1: proto.NewNodeInformation.address:type_name -> proto.IPAddress
	0,  // 2: proto.NodeInformation.coordinate:type_name -> proto.Coordinate
	8,  // 3: proto.NodeInformation.originNode:type_name -> proto.IPAddress
	3,  // 4: proto.InformationToAddNode.oldNode:type_name -> proto.NodeInformation
	0,  // 5: proto.InformationToAddNode.newCoordinate:type_name -> proto.Coordinate
	9,  // 6: proto.InformationToAddNode.resources:type_name -> proto.Resource
	3,  // 7: proto.InformationToAddNode.neighboursOldNode:type_name -> proto.NodeInformation
	3,  // 8: proto.Resources.neighboursOldNode:type_name -> proto.NodeInformation
	0,  // 9: proto.Resources.coordinateOldNode:type_name -> proto.Coordinate
	9,  // 10: proto.Resources.resources:type_name -> proto.Resource
	9,  // 11: proto.ResourcesBackup.resources:type_name -> proto.Resource
	3,  // 12: proto.HeartBeatMessage.nodes:type_name -> proto.NodeInformation
	9,  // 13: proto.AddBackup.resource:type_name -> proto.Resource
	3,  // 14: proto.TakeoverMessage.byWho:type_name -> proto.NodeInformation
	8,  // 15: proto.BootstrapService.addNode:input_type -> proto.IPAddress
	8,  // 16: proto.BootstrapService.removeNode:input_type -> proto.IPAddress
	12, // 17: proto.BootstrapService.findActiveNode:input_type -> proto.AddressList
	2,  // 18: proto.NodeService.addNode:input_type -> proto.NewNodeInformation
	7,  // 19: proto.NodeService.heartBeat:input_type -> proto.HeartBeatMessage
	9,  // 20: proto.NodeService.addResource:input_type -> proto.Resource
	11, // 21: proto.NodeService.getResource:input_type -> proto.Key
	11, // 22: proto.NodeService.deleteResource:input_type -> proto.Key
	4,  // 23: proto.NodeService.unionZone:input_type -> proto.InformationToAddNode
	5,  // 24: proto.NodeService.entrustResources:input_type -> proto.Resources
	2,  // 25: proto.NodeService.splitZone:input_type -> proto.NewNodeInformation
	0,  // 26: proto.NodeService.updateZone:input_type -> proto.Coordinate
	8,  // 27: proto.NodeService.removeNodeAsNeighbour:input_type -> proto.IPAddress
	13, // 28: proto.NodeService.addResourceToBackupNode:input_type -> proto.AddBackup
	14, // 29: proto.NodeService.deleteResourceToBackupNode:input_type -> proto.DeleteBackup
	8,  // 30: proto.NodeService.heartBeatBackup:input_type -> proto.IPAddress
	6,  // 31: proto.NodeService.deleteResourcesBackup:input_type -> proto.ResourcesBackup
	6,  // 32: proto.NodeService.addResourcesBackup:input_type -> proto.ResourcesBackup
	8,  // 33: proto.NodeService.deleteAllResourcesBackup:input_type -> proto.IPAddress
	15, // 34: proto.NodeService.takeover:input_type -> proto.TakeoverMessage
	8,  // 35: proto.BootstrapService.addNode:output_type -> proto.IPAddress
	10, // 36: proto.BootstrapService.removeNode:output_type -> proto.Bool
	8,  // 37: proto.BootstrapService.findActiveNode:output_type -> proto.IPAddress
	4,  // 38: proto.NodeService.addNode:output_type -> proto.InformationToAddNode
	7,  // 39: proto.NodeService.heartBeat:output_type -> proto.HeartBeatMessage
	8,  // 40: proto.NodeService.addResource:output_type -> proto.IPAddress
	9,  // 41: proto.NodeService.getResource:output_type -> proto.Resource
	8,  // 42: proto.NodeService.deleteResource:output_type -> proto.IPAddress
	10, // 43: proto.NodeService.unionZone:output_type -> proto.Bool
	10, // 44: proto.NodeService.entrustResources:output_type -> proto.Bool
	4,  // 45: proto.NodeService.splitZone:output_type -> proto.InformationToAddNode
	10, // 46: proto.NodeService.updateZone:output_type -> proto.Bool
	10, // 47: proto.NodeService.removeNodeAsNeighbour:output_type -> proto.Bool
	10, // 48: proto.NodeService.addResourceToBackupNode:output_type -> proto.Bool
	10, // 49: proto.NodeService.deleteResourceToBackupNode:output_type -> proto.Bool
	10, // 50: proto.NodeService.heartBeatBackup:output_type -> proto.Bool
	10, // 51: proto.NodeService.deleteResourcesBackup:output_type -> proto.Bool
	10, // 52: proto.NodeService.addResourcesBackup:output_type -> proto.Bool
	10, // 53: proto.NodeService.deleteAllResourcesBackup:output_type -> proto.Bool
	10, // 54: proto.NodeService.takeover:output_type -> proto.Bool
	35, // [35:55] is the sub-list for method output_type
	15, // [15:35] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_can_proto_init() }
func file_proto_can_proto_init() {
	if File_proto_can_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_can_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_can_proto_goTypes,
		DependencyIndexes: file_proto_can_proto_depIdxs,
		MessageInfos:      file_proto_can_proto_msgTypes,
	}.Build()
	File_proto_can_proto = out.File
	file_proto_can_proto_rawDesc = nil
	file_proto_can_proto_goTypes = nil
	file_proto_can_proto_depIdxs = nil
}
